#!/bin/bash
args="$@"

#<<<----------colour substitution by variables---------->>>
T0="$(printf '\033[90m')"  B0="$(printf '\033[100m')" S0="$(printf '\033[30m')"
T1="$(printf '\033[91m')"  B1="$(printf '\033[101m')" S1="$(printf '\033[31m')"
T2="$(printf '\033[92m')"  B2="$(printf '\033[102m')" S2="$(printf '\033[32m')"
T3="$(printf '\033[93m')"  B3="$(printf '\033[103m')" S3="$(printf '\033[33m')"
T4="$(printf '\033[94m')"  B4="$(printf '\033[104m')" S4="$(printf '\033[34m')"
T5="$(printf '\033[95m')"  B5="$(printf '\033[105m')" S5="$(printf '\033[35m')"
T6="$(printf '\033[96m')"  B6="$(printf '\033[106m')" S6="$(printf '\033[36m')"
T7="$(printf '\033[97m')"  B7="$(printf '\033[107m')" S7="$(printf '\033[37m')"
ST0="$(printf '\033[00m')" SB0="$(printf '\033[0;1m')"

#<<<-------------substituting system information in variables----------->>>
PWD=$(pwd)
cd $HOME
distro=$(pwd)
op_sys=$(uname -o)
kern=$(uname -r)
arch_sys=$(uname -m)
krname=$(uname)

if [[ $op_sys == 'Android' ]]; then
dev_brand(){
printf "`getprop ro.product.manufacturer` %s"
printf "`getprop ro.product.model` %s"
}
else

dev_brand() {
os=$(source /etc/os-release && echo $ID)
case "$os" in
        "kali"|"ubuntu"|"debian")
                os=$(source /etc/os-release && echo $PRETTY_NAME)
                echp $os
        ;;
        *)
                echo "Not supported"
                exit 1
        ;;
esac
}
fi


if [[ $distro == '/data/data/com.termux/files/home' ]]; then
        rootdir="/data/data/com.termux/files/usr"
elif [[ $distro == '/data/data/hilled.pwnterm/files/usr/home' ]]; then
        rootdir="/data/data/hilled.pwnterm/files/usr"
else
        rootdir="/usr"
fi

#<<<----------program---------->>>
function tfet() {

#pause() {
#pv -qL 100
#}

#slip() {
#sleep 0.02
#}

package() {
apt list --installed 2>/dev/null | wc -l
}

eq() {
  case $1 in
  $2) ;;
  *) return 1 ;;
  esac
}

while read -r line; do
eq "$line" 'MemTotal*' && set -- $line && break
done </proc/meminfo

ovrm="$(($2 / 1000))"
memory=$(free -m | sed -n 's/^Mem:\s\+[0-9]\+\s\+\([0-9]\+\)\s.\+/\1/p')
echo -e "${R0}"

#<<<---------Banner---------->>>
#banner() {
#echo -e "
#        ${T7}___   _${ST0}
#        ${T3} |___|___|_ _|_${TS0}
#        ${T2} |   |(/_|_(_| |${TS0}
#"
#}

#<<<------------RESULT---------->>>
if [[ $distro == '/data/data/com.termux/files/home' ]]; then
distro=TERMUX
#suman=$(printf "${B5}you are using TERMUX :)${SB1}\n")
fi
#banner
# printf "        ${B7}${S5} Authored by Suman Kumar ~BHUTUU ${ST0}${SB0}\n" | pause
echo
if [[ $distro == 'TERMUX' ]]; then
#printf "             ${B6} ${S2}${suman} ${ST0}${SB0}\n" | pause
echo
fi
# fetch
printf "${S7}                      ‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí\n"
printf "${S7}                  ‚ñí‚ñí‚ñí‚ñí‚ñë‚ñë      ‚ñë‚ñë‚ñí‚ñí‚ñí‚ñí\n"
printf "${S7}                ‚ñí‚ñí‚ñë‚ñë              ‚ñë‚ñë‚ñí‚ñí\n"
printf "${S7}               ‚ñí‚ñí‚ñë‚ñë                  ‚ñë‚ñë‚ñí‚ñí\n"
printf "${S7}              ‚ñí‚ñí                      ‚ñí‚ñí\n"
printf "${S7}    ‚ñí‚ñí      ‚ñí‚ñí‚ñë‚ñë              ‚ñà‚ñà‚ñà‚ñà    ‚ñë‚ñë‚ñí‚ñí      ‚ñí‚ñí    ${T5}device${T7}  :  $(dev_brand)\n"
printf "${S7}  ‚ñí‚ñí‚ñë‚ñë‚ñí‚ñí    ‚ñí‚ñí‚ñë‚ñë            ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà  ‚ñë‚ñë‚ñí‚ñí    ‚ñí‚ñí‚ñë‚ñë‚ñí‚ñí ${T2} OS ${T7}     :  ${op_sys}\n"
printf "${S7}  ‚ñí‚ñí‚ñë‚ñë‚ñë‚ñë‚ñí‚ñí  ‚ñí‚ñí‚ñë‚ñë  ‚ñà‚ñà‚ñì‚ñì    ‚ñà‚ñà‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñà‚ñà‚ñà‚ñà‚ñë‚ñë‚ñí‚ñí  ‚ñí‚ñí‚ñë‚ñë‚ñë‚ñë‚ñí‚ñí  ${T6}package${T7} :  $(package)\n"
printf "${S7}  ‚ñí‚ñí‚ñë‚ñë  ‚ñë‚ñë‚ñí‚ñí‚ñí‚ñí‚ñë‚ñë  ‚ñì‚ñì‚ñì‚ñì    ‚ñà‚ñà‚ñì‚ñì‚ñí‚ñí‚ñí‚ñí‚ñì‚ñì‚ñà‚ñà‚ñë‚ñë‚ñí‚ñí‚ñë‚ñë‚ñë‚ñë  ‚ñë‚ñë‚ñí‚ñí  ${T4}shell${T7}   :  $(basename $SHELL)\n"
printf "${S7}    ‚ñí‚ñí    ‚ñë‚ñë‚ñí‚ñí‚ñë‚ñë            ‚ñà‚ñà‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì  ‚ñë‚ñë‚ñí‚ñí‚ñë‚ñë    ‚ñí‚ñí    ${T1}uptime${T7}  : $(uptime -p | sed 's/up//')\n"
printf "${S7}    ‚ñí‚ñí‚ñë‚ñë    ‚ñí‚ñí‚ñë‚ñë                      ‚ñë‚ñë‚ñí‚ñí      ‚ñí‚ñí    ${T3}ram${T7}     :  $memory / $ovrm MB\n"
printf "${S7}      ‚ñë‚ñë    ‚ñí‚ñí‚ñë‚ñë  ${S1}‚ñà‚ñà${T7}              ${S1}‚ñà‚ñà${T7}  ‚ñë‚ñë‚ñí‚ñí    ‚ñí‚ñí      ${S3}arch${T7}    :  ${arch_sys}\n"
printf "${S7}      ‚ñí‚ñí‚ñë‚ñë‚ñë‚ñë‚ñí‚ñí‚ñë‚ñë    ${S1}‚ñà‚ñà‚ñì‚ñì‚ñí‚ñí‚ñì‚ñì‚ñí‚ñí‚ñì‚ñì‚ñà‚ñà${T7}    ‚ñë‚ñë‚ñí‚ñí‚ñë‚ñë‚ñë‚ñë‚ñí‚ñí      ${S2}kernel${T7}  :  ${krname}\n"
printf "${S7}        ‚ñí‚ñí‚ñë‚ñë‚ñí‚ñí‚ñë‚ñë      ${S1}‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí${T7}      ‚ñë‚ñë‚ñí‚ñí‚ñë‚ñë‚ñë‚ñë        ${S6}kernel version${T7}:  ${kern}\n"
printf "${S7}          ‚ñí‚ñí‚ñë‚ñë        ${S1}‚ñí‚ñí‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñí‚ñí${T7}        ‚ñë‚ñë‚ñí‚ñí\n"
printf "${S7}          ‚ñí‚ñí‚ñë‚ñë‚ñë‚ñë  ‚ñë‚ñë‚ñë‚ñë${S1}‚ñí‚ñí‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñí‚ñí${T7}‚ñë‚ñë‚ñë‚ñë  ‚ñë‚ñë‚ñë‚ñë‚ñí‚ñí          ${B0}${T1} üòò ${T3} üòç ${T2} üôà ${T4} ü§≠ ${T1} ü•≥ ${T1} üòä  ${T4} üòí ${T3} üòè ${ST0}\n"
printf "${S7}          ‚ñí‚ñí‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë${S1}‚ñí‚ñí‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñí‚ñí${T7}‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñí‚ñí\n"
printf "${S7}          ‚ñí‚ñí‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë${S1}‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí${T7}‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñí‚ñí\n"
printf "${S7}       ‚ñí‚ñí‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñí‚ñí\n"
printf "${S7}       ‚ñí‚ñí‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñí‚ñí‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñí‚ñí\n"
printf "${S7}     ‚ñí‚ñí‚ñë‚ñë‚ñë‚ñë‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñë‚ñë‚ñë‚ñë‚ñí‚ñí\n"
printf "${S7}   ‚ñì‚ñì‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñì‚ñì    ‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñì‚ñì    ‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñì‚ñì\n"
printf "${S7}     ‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí            ‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí            ‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí\n"
echo
#printf "${S1}THANKU${ST0}\n" no need to thank you
echo
}
comand="T-fetch $args"
if [[ $comand == 'T-fetch -u' || $comand == 'T-fetch --update' ]]; then
cd ${rootdir}/share/T-fetch
git pull
elif [[ $comand == 'T-fetch ~u' || $comand == 'T-fetch ~~update' ]]; then
cd ${rootdir}/share/T-fetch
git pull
bash install.sh
else
tfet
fi
